[
  {
    "objectID": "Homework_4.html",
    "href": "Homework_4.html",
    "title": "Homework_4",
    "section": "",
    "text": "If your working directory is myfolder/homework/, what relative path would you specify to get the file located at myfolder/MyData.csv?\n\n\n“…/MyData.csv”\n\n\nWhat are the major benefits of using R projects?\n\n\nR projects help to keep files associated with one task organized. An R project creates a project directory to keep files together and uses that file as the working directory. This makes it easier for other to reproduce results using the same code. It also just provides a smaller working environment for a single project, so it doesn’t get confounded by other code (like same-named objects).\n\n\nWhat is git and what is github?\n\n\nGit is a version control system, meaning it stores files that many people can have access to and can update. GitHub is where those gits are stored and accessed.\n\n\nWhat are the two main differences between a tibble and a data.frame?\n\n\nPrinting a tibble provides more useful/neater information and almost all tidyverse functions are built to work on a tibble.\n\n\nRewrite the following nested function call using BaseR’s chaining operator:\n\n\n    arrange(filter(select(as_tibble(iris), starts_with(\"Petal\"), Species),\n                          Petal.Length &lt; 1.55), Species)\n\n# A tibble: 37 × 3\n   Petal.Length Petal.Width Species\n          &lt;dbl&gt;       &lt;dbl&gt; &lt;fct&gt;  \n 1          1.4         0.2 setosa \n 2          1.4         0.2 setosa \n 3          1.3         0.2 setosa \n 4          1.5         0.2 setosa \n 5          1.4         0.2 setosa \n 6          1.4         0.3 setosa \n 7          1.5         0.2 setosa \n 8          1.4         0.2 setosa \n 9          1.5         0.1 setosa \n10          1.5         0.2 setosa \n# ℹ 27 more rows\n\n\n\nRearranged below:\n\n\n    as_tibble(iris) |&gt;\n      select(starts_with(\"Petal\"), Species) |&gt;\n      filter(Petal.Length &lt; 1.55) |&gt;\n      arrange(Species)\n\n# A tibble: 37 × 3\n   Petal.Length Petal.Width Species\n          &lt;dbl&gt;       &lt;dbl&gt; &lt;fct&gt;  \n 1          1.4         0.2 setosa \n 2          1.4         0.2 setosa \n 3          1.3         0.2 setosa \n 4          1.5         0.2 setosa \n 5          1.4         0.2 setosa \n 6          1.4         0.3 setosa \n 7          1.5         0.2 setosa \n 8          1.4         0.2 setosa \n 9          1.5         0.1 setosa \n10          1.5         0.2 setosa \n# ℹ 27 more rows"
  },
  {
    "objectID": "Homework_4.html#task-1-conceptual-questions",
    "href": "Homework_4.html#task-1-conceptual-questions",
    "title": "Homework_4",
    "section": "",
    "text": "If your working directory is myfolder/homework/, what relative path would you specify to get the file located at myfolder/MyData.csv?\n\n\n“…/MyData.csv”\n\n\nWhat are the major benefits of using R projects?\n\n\nR projects help to keep files associated with one task organized. An R project creates a project directory to keep files together and uses that file as the working directory. This makes it easier for other to reproduce results using the same code. It also just provides a smaller working environment for a single project, so it doesn’t get confounded by other code (like same-named objects).\n\n\nWhat is git and what is github?\n\n\nGit is a version control system, meaning it stores files that many people can have access to and can update. GitHub is where those gits are stored and accessed.\n\n\nWhat are the two main differences between a tibble and a data.frame?\n\n\nPrinting a tibble provides more useful/neater information and almost all tidyverse functions are built to work on a tibble.\n\n\nRewrite the following nested function call using BaseR’s chaining operator:\n\n\n    arrange(filter(select(as_tibble(iris), starts_with(\"Petal\"), Species),\n                          Petal.Length &lt; 1.55), Species)\n\n# A tibble: 37 × 3\n   Petal.Length Petal.Width Species\n          &lt;dbl&gt;       &lt;dbl&gt; &lt;fct&gt;  \n 1          1.4         0.2 setosa \n 2          1.4         0.2 setosa \n 3          1.3         0.2 setosa \n 4          1.5         0.2 setosa \n 5          1.4         0.2 setosa \n 6          1.4         0.3 setosa \n 7          1.5         0.2 setosa \n 8          1.4         0.2 setosa \n 9          1.5         0.1 setosa \n10          1.5         0.2 setosa \n# ℹ 27 more rows\n\n\n\nRearranged below:\n\n\n    as_tibble(iris) |&gt;\n      select(starts_with(\"Petal\"), Species) |&gt;\n      filter(Petal.Length &lt; 1.55) |&gt;\n      arrange(Species)\n\n# A tibble: 37 × 3\n   Petal.Length Petal.Width Species\n          &lt;dbl&gt;       &lt;dbl&gt; &lt;fct&gt;  \n 1          1.4         0.2 setosa \n 2          1.4         0.2 setosa \n 3          1.3         0.2 setosa \n 4          1.5         0.2 setosa \n 5          1.4         0.2 setosa \n 6          1.4         0.3 setosa \n 7          1.5         0.2 setosa \n 8          1.4         0.2 setosa \n 9          1.5         0.1 setosa \n10          1.5         0.2 setosa \n# ℹ 27 more rows"
  },
  {
    "objectID": "Homework_4.html#task-2-reading-delimited-data",
    "href": "Homework_4.html#task-2-reading-delimited-data",
    "title": "Homework_4",
    "section": "Task 2: Reading Delimited Data",
    "text": "Task 2: Reading Delimited Data\nRead in glass data set and add column names.\n\n    library(tidyverse)\n    glass_data&lt;-read_csv(\"https://www4.stat.ncsu.edu/~online/datasets/glass.data\",\n                         col_names=c(\"Id\",\"RI\",\"Na\",\"Mg\",\"Al\",\"Si\",\"K\",\"Ca\",\"Ba\",\n                                      \"Fe\",\"Type\"))\n\nRows: 214 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (11): Id, RI, Na, Mg, Al, Si, K, Ca, Ba, Fe, Type\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n    glass_data\n\n# A tibble: 214 × 11\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe  Type\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1     1  1.52  13.6  4.49  1.1   71.8  0.06  8.75     0  0        1\n 2     2  1.52  13.9  3.6   1.36  72.7  0.48  7.83     0  0        1\n 3     3  1.52  13.5  3.55  1.54  73.0  0.39  7.78     0  0        1\n 4     4  1.52  13.2  3.69  1.29  72.6  0.57  8.22     0  0        1\n 5     5  1.52  13.3  3.62  1.24  73.1  0.55  8.07     0  0        1\n 6     6  1.52  12.8  3.61  1.62  73.0  0.64  8.07     0  0.26     1\n 7     7  1.52  13.3  3.6   1.14  73.1  0.58  8.17     0  0        1\n 8     8  1.52  13.2  3.61  1.05  73.2  0.57  8.24     0  0        1\n 9     9  1.52  14.0  3.58  1.37  72.1  0.56  8.3      0  0        1\n10    10  1.52  13    3.6   1.36  73.0  0.57  8.4      0  0.11     1\n# ℹ 204 more rows\n\n\nOverwrite the numeric value of the Type variable to a meaningful name, then keep only observations where Fe &lt; 0.2 and Type is “tableware” or “headlamp”.\n\n    glass_data|&gt;\n      mutate(Type=\n           ifelse(Type == 1, \"building_windows_float_processed\",\n                  ifelse(Type == 2, \"building_windows_non_float_processed\",\n                         ifelse(Type == 3,\"vehicle_windows_float_processed\",\n                                ifelse(Type ==4,\"vehicle_windows_non_float_processed\",\n                                       ifelse(Type == 5, \"containers\",\n                                              ifelse(Type == 6,\"tableware\",\"headlamps\"\n                                                     ))))))) |&gt;\n      filter(Fe &lt; 0.2 & (Type == \"headlamps\" | Type == \"tableware\") )\n\n# A tibble: 38 × 11\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe Type     \n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;    \n 1   177  1.52  14    2.39  1.56  72.4  0     9.57  0        0 tableware\n 2   178  1.52  13.8  2.41  1.19  72.8  0     9.77  0        0 tableware\n 3   179  1.52  14.5  2.24  1.62  72.4  0     9.26  0        0 tableware\n 4   180  1.52  14.1  2.19  1.66  72.7  0     9.32  0        0 tableware\n 5   181  1.51  14.4  1.74  1.54  74.6  0     7.59  0        0 tableware\n 6   182  1.52  15.0  0.78  1.74  72.5  0     9.95  0        0 tableware\n 7   183  1.52  14.2  0     2.09  72.7  0    10.9   0        0 tableware\n 8   184  1.52  14.6  0     0.56  73.5  0    11.2   0        0 tableware\n 9   185  1.51  17.4  0     0.34  75.4  0     6.65  0        0 tableware\n10   186  1.51  13.7  3.2   1.81  72.8  1.76  5.43  1.19     0 headlamps\n# ℹ 28 more rows\n\n\nRead in yeast data and add column names.\n\n    yeast_data&lt;-read_table(\"https://www4.stat.ncsu.edu/~online/datasets/yeast.data\",\n                           col_names=c(\"seq_name\",\"mcg\",\"gvh\",\"alm\",\"mit\",\"erl\",\"pox\",\n                                  \"vac\",\"nuc\",\"class\"))\n\n\n── Column specification ────────────────────────────────────────────────────────\ncols(\n  seq_name = col_character(),\n  mcg = col_double(),\n  gvh = col_double(),\n  alm = col_double(),\n  mit = col_double(),\n  erl = col_double(),\n  pox = col_double(),\n  vac = col_double(),\n  nuc = col_double(),\n  class = col_character()\n)\n\n\nRemove the seq and nuc colums, then add columns for the mean and median of the remaining numeric variables at each class grouping.\n\n    yeast_data |&gt;\n      select(mcg:vac, class) |&gt;\n      group_by(class) |&gt;\n      mutate(across(where(is.numeric), list(mean=mean, median=median),\n                    .names =  \"{.col}_{.fn}\"))\n\n# A tibble: 1,484 × 22\n# Groups:   class [10]\n     mcg   gvh   alm   mit   erl   pox   vac class mcg_mean mcg_median gvh_mean\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;\n 1  0.58  0.61  0.47  0.13   0.5   0    0.48 MIT      0.521       0.51    0.533\n 2  0.43  0.67  0.48  0.27   0.5   0    0.53 MIT      0.521       0.51    0.533\n 3  0.64  0.62  0.49  0.15   0.5   0    0.53 MIT      0.521       0.51    0.533\n 4  0.58  0.44  0.57  0.13   0.5   0    0.54 NUC      0.452       0.45    0.456\n 5  0.42  0.44  0.48  0.54   0.5   0    0.48 MIT      0.521       0.51    0.533\n 6  0.51  0.4   0.56  0.17   0.5   0.5  0.49 CYT      0.481       0.48    0.470\n 7  0.5   0.54  0.48  0.65   0.5   0    0.53 MIT      0.521       0.51    0.533\n 8  0.48  0.45  0.59  0.2    0.5   0    0.58 NUC      0.452       0.45    0.456\n 9  0.55  0.5   0.66  0.36   0.5   0    0.49 MIT      0.521       0.51    0.533\n10  0.4   0.39  0.6   0.15   0.5   0    0.58 CYT      0.481       0.48    0.470\n# ℹ 1,474 more rows\n# ℹ 11 more variables: gvh_median &lt;dbl&gt;, alm_mean &lt;dbl&gt;, alm_median &lt;dbl&gt;,\n#   mit_mean &lt;dbl&gt;, mit_median &lt;dbl&gt;, erl_mean &lt;dbl&gt;, erl_median &lt;dbl&gt;,\n#   pox_mean &lt;dbl&gt;, pox_median &lt;dbl&gt;, vac_mean &lt;dbl&gt;, vac_median &lt;dbl&gt;"
  },
  {
    "objectID": "Homework_4.html#task-3-combining-excel-and-delimited-data",
    "href": "Homework_4.html#task-3-combining-excel-and-delimited-data",
    "title": "Homework_4",
    "section": "Task 3: Combining Excel and Delimited Data",
    "text": "Task 3: Combining Excel and Delimited Data\nRead in the first page of the white wine data set.\n\n    library(readxl)\n\nWarning: package 'readxl' was built under R version 4.3.3\n\n    ww1_data&lt;-read_excel(\"white-wine.xlsx\",sheet=excel_sheets(\"white-wine.xlsx\")[1])\n    ww1_data\n\n# A tibble: 4,898 × 12\n   `fixed acidity` `volatile acidity` `citric acid` `residual sugar` chlorides\n             &lt;dbl&gt;              &lt;dbl&gt;         &lt;dbl&gt;            &lt;dbl&gt;     &lt;dbl&gt;\n 1               7               0.27          0.36             20.7     0.045\n 2              63               0.3           0.34              1.6     0.049\n 3              81               0.28          0.4               6.9     0.05 \n 4              72               0.23          0.32              8.5     0.058\n 5              72               0.23          0.32              8.5     0.058\n 6              81               0.28          0.4               6.9     0.05 \n 7              62               0.32          0.16              7       0.045\n 8               7               0.27          0.36             20.7     0.045\n 9              63               0.3           0.34              1.6     0.049\n10              81               0.22          0.43              1.5     0.044\n# ℹ 4,888 more rows\n# ℹ 7 more variables: `free sulfur dioxide` &lt;dbl&gt;,\n#   `total sulfur dioxide` &lt;dbl&gt;, density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;,\n#   alcohol &lt;dbl&gt;, quality &lt;dbl&gt;\n\n\nRead in the second page of the white wine data set, then overwrite the column names from the first page with the data in the second page.\n\n    ww2_data&lt;-read_excel(\"white-wine.xlsx\",sheet=excel_sheets(\"white-wine.xlsx\")[2])\n    colnames(ww1_data)&lt;-pull(ww2_data,1)\n\nCreate a new variable to indicate that these observations came from the white wine data set.\n\n    ww1_data$type&lt;- \"white\"\n\nRepeat the steps above for red wine data set.\n\n    rw_data&lt;-read_delim(\"red-wine.csv\",delim = \";\")\n\nRows: 1599 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\ndbl (12): fixed acidity, volatile acidity, citric acid, residual sugar, chlo...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n    colnames(rw_data)&lt;-pull(ww2_data,1)\n    rw_data$type&lt;- \"red\"\n\nCombine the two tibbles.\n\n    fullw_data&lt;-bind_rows(ww1_data, rw_data)\n\nKeep only observations where quality is &gt; 6.5 and alcohol is &lt; 132, then reorder the rows to descend by quality, then selct only variables that contain “acid”, alcohol, type, and quality. Finally, add the mean and standard deviation of alcohol by quality.\n\n    fullw_data |&gt;\n    filter(quality &gt; 6.5 & alcohol &lt; 132)|&gt;\n    arrange(desc(quality))|&gt;\n    select(contains(\"acid\"),alcohol,type,quality)|&gt;\n    group_by(quality) |&gt;\n    mutate(alcohol_mean=mean(alcohol), alcohol_sd=sd(alcohol))\n\n# A tibble: 1,206 × 8\n# Groups:   quality [3]\n   fixed_acidity volatile_acidity citric_acid alcohol type  quality alcohol_mean\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;        &lt;dbl&gt;\n 1            91             0.27        0.45     104 white       9        122. \n 2            66             0.36        0.29     124 white       9        122. \n 3            74             0.24        0.36     125 white       9        122. \n 4            69             0.36        0.34     127 white       9        122. \n 5            71             0.26        0.49     129 white       9        122. \n 6            62             0.66        0.48     128 white       8         94.1\n 7            62             0.66        0.48     128 white       8         94.1\n 8            68             0.26        0.42     105 white       8         94.1\n 9            67             0.23        0.31     107 white       8         94.1\n10            67             0.23        0.31     107 white       8         94.1\n# ℹ 1,196 more rows\n# ℹ 1 more variable: alcohol_sd &lt;dbl&gt;"
  }
]